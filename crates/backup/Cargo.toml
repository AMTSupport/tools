[package]
name = "backup"
version = "0.1.0"
categories = ["command-line-utilities", "system", "utilities", "cli"]
keywords = ["backup"]
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license-file.workspace = true

[[bin]]
name = "backup"
path = "src/main.rs"

[features]
default = ["ui-cli", "sources-s3", "sources-bitwarden"]
binary-downloader = ["bytes", "rand", "const_format", "zip"]

ui-cli = ["indicatif", "inquire", "amt-lib/ui-cli", "obj-builder"]

sources-s3 = ["opendal", "futures", "dep:paste"]
sources-bitwarden = ["binary-downloader"]
sources-1password = ["binary-downloader", "zip"]

[dependencies]
amt-lib.workspace = true
amt-macros.workspace = true
obj-builder = { workspace = true, optional = true }

# Runtimes
tokio.workspace = true

# Cli & UI
clap.workspace = true
indicatif = { workspace = true, features = ["rayon"], optional = true }
inquire = { workspace = true, features = ["path"], optional = true }

# Data / Serialization
serde.workspace = true
serde_json.workspace = true
chrono = { workspace = true, features = ["serde", "clock"] }
zip = { workspace = true, features = [
    # "zstd",
    "bzip2",
    "deflate",
    "deflate-zlib",
], optional = true } # TODO :: Downsize features
paste = { workspace = true, optional = true }

# Networking
reqwest = { workspace = true, features = ["stream", "rustls-tls"] }

# Logging & Errors
tracing.workspace = true
tracing-subscriber.workspace = true
tracing-appender.workspace = true
thiserror.workspace = true
anyhow.workspace = true

fs-err.workspace = true
filetime.workspace = true
glob.workspace = true

opendal = { workspace = true, features = [
    "services-s3"
], optional = true }

# Futures & Async
futures = { workspace = true, optional = true }
futures-util.workspace = true
tokio-stream.workspace = true
rayon.workspace = true

# For downloading cli binaries
bytes = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
const_format = { workspace = true, optional = true }
tempfile.workspace = true
regex.workspace = true

[dev-dependencies]
# Logging & Errors
env_logger.workspace = true
test-log = { workspace = true, features = ["trace"] }
tracing-subscriber = { workspace = true, default-features = false, features = [
    "env-filter",
    "fmt",
] }

# Generating random data for tests
fake = { workspace = true, features = [
    "derive",
    "chrono",
    "serde_json",
    "maybe-non-empty-collections",
] }
rand.workspace = true

# Fs & IO
tempfile.workspace = true
assert_fs.workspace = true
